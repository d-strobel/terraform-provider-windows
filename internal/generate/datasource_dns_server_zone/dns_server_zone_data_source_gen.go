// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package datasource_dns_server_zone

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
)

func DnsServerZoneDataSourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"allowed_dc_for_ns_records_auto_creation": schema.StringAttribute{
				Computed:            true,
				Description:         "Allowed DC for NS records auto creation.",
				MarkdownDescription: "Allowed DC for NS records auto creation.",
			},
			"directory_partition_name": schema.StringAttribute{
				Computed:            true,
				Description:         "The directory partition name.",
				MarkdownDescription: "The directory partition name.",
			},
			"distinguished_name": schema.StringAttribute{
				Computed:            true,
				Description:         "The distinguished name.",
				MarkdownDescription: "The distinguished name.",
			},
			"dynamic_update": schema.StringAttribute{
				Computed:            true,
				Description:         "The dynamic update setting.",
				MarkdownDescription: "The dynamic update setting.",
			},
			"id": schema.StringAttribute{
				Computed:            true,
				Description:         "The ID of the retrieved DNS Zone.",
				MarkdownDescription: "The ID of the retrieved DNS Zone.",
			},
			"ignore_policies": schema.BoolAttribute{
				Computed:            true,
				Description:         "Indicates if policies are ignored.",
				MarkdownDescription: "Indicates if policies are ignored.",
			},
			"is_auto_created": schema.BoolAttribute{
				Computed:            true,
				Description:         "Indicates if the zone is auto-created.",
				MarkdownDescription: "Indicates if the zone is auto-created.",
			},
			"is_ds_integrated": schema.BoolAttribute{
				Computed:            true,
				Description:         "Indicates if the zone is DS integrated.",
				MarkdownDescription: "Indicates if the zone is DS integrated.",
			},
			"is_paused": schema.BoolAttribute{
				Computed:            true,
				Description:         "Indicates if the zone is paused.",
				MarkdownDescription: "Indicates if the zone is paused.",
			},
			"is_read_only": schema.BoolAttribute{
				Computed:            true,
				Description:         "Indicates if the zone is read-only.",
				MarkdownDescription: "Indicates if the zone is read-only.",
			},
			"is_reverse_lookup_zone": schema.BoolAttribute{
				Computed:            true,
				Description:         "Indicates if the zone is a reverse lookup zone.",
				MarkdownDescription: "Indicates if the zone is a reverse lookup zone.",
			},
			"is_shutdown": schema.BoolAttribute{
				Computed:            true,
				Description:         "Indicates if the zone is shutdown.",
				MarkdownDescription: "Indicates if the zone is shutdown.",
			},
			"is_signed": schema.BoolAttribute{
				Computed:            true,
				Description:         "Indicates if the zone is signed.",
				MarkdownDescription: "Indicates if the zone is signed.",
			},
			"is_wins_enabled": schema.BoolAttribute{
				Computed:            true,
				Description:         "Indicates if WINS is enabled.",
				MarkdownDescription: "Indicates if WINS is enabled.",
			},
			"name": schema.StringAttribute{
				Required:            true,
				Description:         "The name of the DNS Zone.",
				MarkdownDescription: "The name of the DNS Zone.",
			},
			"notify": schema.StringAttribute{
				Computed:            true,
				Description:         "The notify setting.",
				MarkdownDescription: "The notify setting.",
			},
			"notify_servers": schema.StringAttribute{
				Computed:            true,
				Description:         "The servers to notify.",
				MarkdownDescription: "The servers to notify.",
			},
			"replication_scope": schema.StringAttribute{
				Computed:            true,
				Description:         "The replication scope.",
				MarkdownDescription: "The replication scope.",
			},
			"secondary_servers": schema.StringAttribute{
				Computed:            true,
				Description:         "The secondary servers.",
				MarkdownDescription: "The secondary servers.",
			},
			"secure_secondaries": schema.StringAttribute{
				Computed:            true,
				Description:         "The secure secondaries setting.",
				MarkdownDescription: "The secure secondaries setting.",
			},
			"zone_file": schema.StringAttribute{
				Computed:            true,
				Description:         "The zone file.",
				MarkdownDescription: "The zone file.",
			},
			"zone_type": schema.StringAttribute{
				Computed:            true,
				Description:         "The type of the zone.",
				MarkdownDescription: "The type of the zone.",
			},
		},
		Description:         "Retrieve information about a DNS server zone.",
		MarkdownDescription: "Retrieve information about a DNS server zone.",
	}
}

type DnsServerZoneModel struct {
	AllowedDcForNsRecordsAutoCreation types.String `tfsdk:"allowed_dc_for_ns_records_auto_creation"`
	DirectoryPartitionName            types.String `tfsdk:"directory_partition_name"`
	DistinguishedName                 types.String `tfsdk:"distinguished_name"`
	DynamicUpdate                     types.String `tfsdk:"dynamic_update"`
	Id                                types.String `tfsdk:"id"`
	IgnorePolicies                    types.Bool   `tfsdk:"ignore_policies"`
	IsAutoCreated                     types.Bool   `tfsdk:"is_auto_created"`
	IsDsIntegrated                    types.Bool   `tfsdk:"is_ds_integrated"`
	IsPaused                          types.Bool   `tfsdk:"is_paused"`
	IsReadOnly                        types.Bool   `tfsdk:"is_read_only"`
	IsReverseLookupZone               types.Bool   `tfsdk:"is_reverse_lookup_zone"`
	IsShutdown                        types.Bool   `tfsdk:"is_shutdown"`
	IsSigned                          types.Bool   `tfsdk:"is_signed"`
	IsWinsEnabled                     types.Bool   `tfsdk:"is_wins_enabled"`
	Name                              types.String `tfsdk:"name"`
	Notify                            types.String `tfsdk:"notify"`
	NotifyServers                     types.String `tfsdk:"notify_servers"`
	ReplicationScope                  types.String `tfsdk:"replication_scope"`
	SecondaryServers                  types.String `tfsdk:"secondary_servers"`
	SecureSecondaries                 types.String `tfsdk:"secure_secondaries"`
	ZoneFile                          types.String `tfsdk:"zone_file"`
	ZoneType                          types.String `tfsdk:"zone_type"`
}
